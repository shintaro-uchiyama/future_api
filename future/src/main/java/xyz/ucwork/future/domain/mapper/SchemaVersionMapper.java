package xyz.ucwork.future.domain.mapper;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import xyz.ucwork.future.domain.model.SchemaVersion;

public interface SchemaVersionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schema_version
     *
     * @mbg.generated
     */
    @Delete({
        "delete from schema_version",
        "where installed_rank = #{installedRank,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer installedRank);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schema_version
     *
     * @mbg.generated
     */
    @Insert({
        "insert into schema_version (installed_rank, version, ",
        "description, type, ",
        "script, checksum, ",
        "installed_by, installed_on, ",
        "execution_time, success)",
        "values (#{installedRank,jdbcType=INTEGER}, #{version,jdbcType=VARCHAR}, ",
        "#{description,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, ",
        "#{script,jdbcType=VARCHAR}, #{checksum,jdbcType=INTEGER}, ",
        "#{installedBy,jdbcType=VARCHAR}, #{installedOn,jdbcType=TIMESTAMP}, ",
        "#{executionTime,jdbcType=INTEGER}, #{success,jdbcType=BIT})"
    })
    int insert(SchemaVersion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schema_version
     *
     * @mbg.generated
     */
    int insertSelective(SchemaVersion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schema_version
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "installed_rank, version, description, type, script, checksum, installed_by, ",
        "installed_on, execution_time, success",
        "from schema_version",
        "where installed_rank = #{installedRank,jdbcType=INTEGER}"
    })
    @ResultMap("xyz.ucwork.future.domain.mapper.SchemaVersionMapper.BaseResultMap")
    SchemaVersion selectByPrimaryKey(Integer installedRank);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schema_version
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(SchemaVersion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table schema_version
     *
     * @mbg.generated
     */
    @Update({
        "update schema_version",
        "set version = #{version,jdbcType=VARCHAR},",
          "description = #{description,jdbcType=VARCHAR},",
          "type = #{type,jdbcType=VARCHAR},",
          "script = #{script,jdbcType=VARCHAR},",
          "checksum = #{checksum,jdbcType=INTEGER},",
          "installed_by = #{installedBy,jdbcType=VARCHAR},",
          "installed_on = #{installedOn,jdbcType=TIMESTAMP},",
          "execution_time = #{executionTime,jdbcType=INTEGER},",
          "success = #{success,jdbcType=BIT}",
        "where installed_rank = #{installedRank,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SchemaVersion record);
}